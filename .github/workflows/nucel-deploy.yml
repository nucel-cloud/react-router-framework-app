name: Deploy with Nucel

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '22'
  NUCEL_PROJECT_ID: ${{ secrets.NUCEL_PROJECT_ID }}
  NUCEL_AWS_ROLE_ARN: ${{ secrets.NUCEL_AWS_ROLE_ARN }}
  NUCEL_EXTERNAL_ID: ${{ secrets.NUCEL_EXTERNAL_ID }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  PULUMI_DEBUG_GRPC: "true"
  PULUMI_DEBUG_PROMISE_LEAKS: "true"
  PULUMI_VERBOSE: "true"
  AWS_DEBUG: "true"
  DEBUG: "*"
  AWS_SDK_LOG_LEVEL: "debug"

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.NUCEL_AWS_ROLE_ARN }}
          role-session-name: nucel-deployment-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Nucel CLI
        run: npm install -g @nucel.cloud/cli@latest

      - name: Deploy to AWS
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            nucel deploy --stack preview-pr-${{ github.event.pull_request.number }}
          else
            nucel destroy --stack production
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `### ðŸš€ Preview Deployment Ready!
            
            Your changes have been deployed to a preview environment.
            
            **Stack:** preview-pr-${{ github.event.pull_request.number }}
            **Commit:** ${{ github.sha }}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
